/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 /Users/ajdemarco/Documents/Github/fetch-game/public/models/cookies/ChristmasTreeCookie.glb 
*/

import React, { useRef, useMemo, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { RigidBody, CuboidCollider } from "@react-three/rapier";
import { useControls } from "leva";
import useGame from "../store/useGame";
import { useFrame } from "@react-three/fiber";

export default function Model({ position, rotation = [0, 0, 0] }, ...props) {
  const { nodes, materials } = useGLTF(
    "./models/cookies/ChristmasTreeCookie.glb"
  );
  const [isCollected, setIsCollected] = useState(false); 

  const posArr = [-0.5, 0.73, 0.32];
  const argsArr = [0.76, 2, 0.63];

  const increaseScore = useGame((state) => state.increaseScore)


 if (!isCollected) {
  return (
    <group  position={position} rotation={rotation} dispose={null} {...props}>
      <RigidBody type="kinematicPosition" colliders={false}>
        <CuboidCollider
          onCollisionEnter={(e) => {

            if (e.other.rigidBodyObject.name === "doggo")
            console.log("collision!")
              increaseScore()
              setIsCollected(true);
          }}
          
          position={posArr}
          args={argsArr}
        />

        <mesh
          geometry={nodes.Christmas_tree_1.geometry}
          material={materials["Material.001"]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={0.02}
        />
      </RigidBody>
    </group>
  );

 } else {
  return null;
 }
}

useGLTF.preload("./models/cookies/ChristmasTreeCookie.glb");
